for(i in 1:n){
u=rpois(i,lambda);
sum=sum+u;
}
print(sum/n)
}
lnm_poisson(1,100)
lnm_poisson(1,10)
lnm_poisson = function(lambda,n){
sum=0;
for(i in 1:n){
sum=sum+rpois(i,lambda);
}
print(sum/n)
}
lnm_poisson(1,10)
lnm_poisson = function(lambda,n){
sum=0;
for(i in 1:n){
sum=sum+rpois(1,lambda);
}
print(sum/n)
}
lnm_poisson(1,10)
lnm_poisson(1,100)
lnm_poisson(1,10000)
lnm_poisson(1,10000000)
lnm_poisson(2,100000)
lnm_poisson(2,100000)
lnm_poisson(2,100000)
lnm_poisson(20,100000)
lnm_poisson(20,100000)
lnm_poisson(20,100000)
lnm_poisson(20,100000)
lnm_poisson(20,100000)
lnm_poisson(20,100000)
lnm_poisson(20,100000)
lnm_poisson(20,100000)
print(mean(rpois(n,lambda)))
lnm_poisson2 = function(lambda, n){
print(mean(rpois(n,lambda)))
}
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
lnm_poisson2(2,10000)
replicate(10,lnm_poisson2(2,1000))
mean(replicate(1000,lnm_poisson2(2,100000)))
mean(replicate(100,lnm_poisson2(2,10000)))
mean(replicate(100,lnm_poisson2(2,10000)))
mean(replicate(100,lnm_poisson2(2,10000)))
mean(replicate(100,lnm_poisson2(2,10000)))
mean(replicate(100,lnm_poisson2(2,10000)))
lnm_gamma = function(shape, rate, n){
print(mean(rgamma(n,shape,rate)))
}
mean(replicate(100,lnm_gamma(2,100000)))
mean(replicate(100,lnm_gamma(2,3,100000)))
mean(replicate(100,lnm_gamma(2,3,100000)))
mean(replicate(100,lnm_gamma(2,3,100000)))
mean(replicate(100,lnm_gamma(2,3,100000)))
mean(replicate(100,lnm_gamma(2,1.5,100000)))
mean(replicate(100,lnm_gamma(2,1.5,100000)))
lnm_student = function(r,n){
print(mean(rt(n,r)))
}
lnm_poisson2 = function(lambda, n){
print(mean(rpois(n,lambda)))
}
lnm_gamma = function(shape, rate, n){
print(shape/rate)
print(mean(rgamma(n,shape,rate)))
}
lnm_student = function(r,n){
print(mean(rt(n,r)))
}
mean(replicate(100,lnm_gamma(2,1.5,100000)))
mean(replicate(100,lnm_student(2,100000)))
mean(replicate(100,lnm_student(2,1000000)))
lnm_exp(lambda,n){
lnm_exp = function(lambda,n){
print(1/lambda);
print(mean(rexp(n,lambda)));
}
mean(replicate(100,lnm_exp(2,100000)))
lnm_exp = function(lambda,n){
m=1/lambda;
xn=mean(rexp(n,lambda));
print(abs(m-xn));
print(abs(m-xn)/abs(m))
print(xn);
}
lnm_student(2,1000000)
lnm_exp(2,1000000)
lnm_exp(2,1000000)
lnm_exp(2,1000000)
tlc_poisson = function(lambda, n, N, z) {
expectation = lambda;
st_dev = lambda;
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rpois(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
return(sum/N);
}
tlc_poisson(2,100,10,3)
tlc_poisson(2,100,100,3)
tlc_poisson(2,100,100,3)
tlc_poisson(2,100,100,3)
tlc_poisson(3,100,100,3)
tlc_poisson(3,100,100,3)
tlc_poisson(3,100,100,5)
tlc_poisson(3,100,100,100)
tlc_poisson(3,1000,100,1)
tlc_poisson(3,1000,10000,1)
tlc_poisson(3,100,10000,1)
tlc_poisson(2,100,10000,1)
tlc_poisson = function(lambda, n, N, z) {
expectation = lambda;
st_dev = sqrt(lambda);
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rpois(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
return(sum/N);
}
tlc_poisson(2,100,10000,1)
tlc_poisson(2,100,10000,32)
tlc_poisson(2,100,10000,3)
tlc_poisson = function(lambda, n, N, z) {
expectation = lambda;
st_dev = sqrt(lambda);
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rpois(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pnorm(z));
return(sum/N);
}
tlc_poisson(2,50,10000,3)
tlc_poisson(2,50,10000,0.6)
tlc_poisson(2,50,10000,1)
tlc_poisson(2,50,10000,1)
tlc_poisson(2,50,10000,1)
tlc_poisson(2,50,10000,1)
tlc_poisson(2,50,10000,1)
tlc_poisson(2,50,10000,1)
tlc_poisson(2,50,10000,1)
tlc_poisson(2,50,10000,1)
tlc_poisson(2,50,100000,1)
tlc_poisson(2,50,100000,1)
tlc_poisson(2,50,100000,1)
tlc_poisson(2,500,100000,1)
tlc_poisson(2,500,100000,1)
tlc_poisson(2,500,100000,0.6)
tlc_poisson(2,500,100000,0.06)
# media 1/lambda, disp 1/lambda patrat
tlc_exp = function(lambda,n,N,z){
expectation=1/lambda;
st_dev=1/(lambda*lambda);
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rpois(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pgeom(z));
return(sum/N);
}
tlc_exp(2,500,100000,0.06)
# media 1/lambda, disp 1/lambda patrat
tlc_exp = function(lambda,n,N,z){
expectation=1/lambda;
st_dev=1/(lambda*lambda);
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rpois(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pexp(z));
return(sum/N);
}
tlc_exp(2,500,100000,0.06)
tlc_exp(2,500,100000,1)
# media 1/lambda, disp 1/lambda patrat
tlc_exp = function(lambda,n,N,z){
expectation=1/lambda;
st_dev=1/(lambda);
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rpois(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pexp(z));
return(sum/N);
}
tlc_exp(2,500,100000,1)
tlc_poisson = function(lambda, n, N, z) {
expectation = lambda;
st_dev = sqrt(lambda);
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rpois(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pnorm(z));
return(sum/N);
}
# media 1/lambda, disp 1/lambda patrat
tlc_exp = function(lambda,n,N,z){
expectation=1/lambda;
st_dev=1/lambda;
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rpois(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pexp(z));
return(sum/N);
}
tlc_exp(3,40,100000,2)
# media 1/lambda, disp 1/lambda patrat
tlc_exp = function(lambda,n,N,z){
expectation=1/lambda;
st_dev=1/lambda;
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rexp(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pexp(z));
return(sum/N);
}
tlc_exp(3,40,100000,2)
tlc_exp(3,40,100000,2)
tlc_exp(3,400,100000,2)
tlc_gamma = function(shape,rate,n,N,z){
expectation=shape/rate;
st_dev=sqrt(shape)/rate;
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rgamma(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pgamma(z));
return(sum/N);
}
tlc_gamma(3,400,100000,2)
tlc_gamma(3,5,400,100000,2)
tlc_gamma(3,5,200,100000,2)
tlc_gamma = function(shape,rate,n,N,z){
expectation=shape/rate;
st_dev=sqrt(shape)/rate;
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rgamma(n, lambda));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pgamma(z,shape,rate));
return(sum/N);
}
tlc_gamma(3,5,200,100000,2)
tlc_gamma = function(shape,rate,n,N,z){
expectation=shape/rate;
st_dev=sqrt(shape)/rate;
upper_bound = z * st_dev/sqrt(n) + expectation;
sum = 0;
for(i in 1:N) {
x_n = mean(rgamma(n, shape,rate));
if(x_n <= upper_bound) {
sum = sum + 1;
}
}
print(pgamma(z,shape,rate));
return(sum/N);
}
tlc_gamma(3,5,200,100000,2)
dml = function(n,p,k){
expectation=n*p;
st_dev=sqrt(n*p*(1-p));
xd=(k+0.5-expectation)/st_dev;
xs=(k-0.5-expectation)/st_dev;
print(pnorm(xd)-pnorm(xs))
}
dml = function(n,p,k){
expectation=n*p;
st_dev=sqrt(n*p*(1-p));
xd=(k+0.5-expectation)/st_dev;
xs=(k-0.5-expectation)/st_dev;
print(pnorm(xd)-pnorm(xs));
print(dbinom(k,n,p));
}
dml(100,0.5,5)
dml(100,1,5)
dml(100,0.2,5)
dml(30,0.2,5)
dml(30,0.2,20)
dml(30,0.2,10)
dml(30,0.3,10)
dml(30,0.3,15)
dml(30,0.2,15)
dml(30,0.2,30)
dml(30,0.2,10)
dml_1 = function(n,p,k1,k2){
expectation=n*p;
st_dev=sqrt(n*p*(1-p));
xd=(k2+0.5-expectation)/st_dev;
xs=(k1-0.5-expectation)/st_dev;
print(pnorm(xd)-pnorm(xs));
print(dbinom(k,n,p));
}
dml_1(30,0.2,10,15)
dml_1 = function(n,p,k1,k2){
expectation=n*p;
st_dev=sqrt(n*p*(1-p));
xd=(k2+0.5-expectation)/st_dev;
xs=(k1-0.5-expectation)/st_dev;
print(pnorm(xd)-pnorm(xs));
print(dbinom(k1:k2,n,p));
}
dml_1(30,0.2,10,15)
dml_1 = function(n,p,k1,k2){
expectation=n*p;
st_dev=sqrt(n*p*(1-p));
xd=(k2+0.5-expectation)/st_dev;
xs=(k1-0.5-expectation)/st_dev;
print(pnorm(xd)-pnorm(xs));
print(sum(dbinom(k1:k2,n,p)));
}
dml_1(30,0.2,10,15)
dml_1(30,0.2,10,15)
dml_1(30,0.2,10,15)
dml_1(30,0.2,10,15)
dml_1(30,0.2,10,20)
dml_1(30,0.2,5,20)
dml_1(25,0.7,10,20)
source("F:/PS part2/tema2/tema2.R")
setwd("F:/PS part2/tema2")
source("F:/PS part2/tema2/tema2.R")
source("F:/PS part2/lab4/main.r")
source("F:/PS part2/lab4/main.r")
source("F:/PS part2/lab4/main.r")
source("F:/PS part2/lab4/main.r")
MC_improved_integration_2(10000,1)
MC_improved_integration_2(10000,2)
source("F:/PS part2/lab4/tema.r")
setwd("F:/PS part2/lab5")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
help(ordeR)
help(order)
print(permutation);
print(U);
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
help(sort)
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
help(sample)
source("F:/PS part2/lab5/temaC.r")
generate_bitstring(100)
help(replicatE)
help(replicate)
help(nchar)
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
generate_bit_strings(10,2)
source("F:/PS part2/lab5/temaC.r")
generate_bit_strings(10,2)
source("F:/PS part2/lab5/temaC.r")
help(paste0)
source("F:/PS part2/lab5/temaC.r")
lexicographic_compare("10001","11000")
lexicographic_compare("10000","11000")
lexicographic_compare("10000","10000")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
lexicographic_compare("10000","10000")
source("F:/PS part2/lab5/temaC.r")
lexicographic_compare("10000","10000")
source("F:/PS part2/lab5/temaC.r")
lexicographic_compare("10000","10000")
lexicographic_compare("10000","10000")
lexicographic_compare("10000","10000")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
generate_sorted_permutation(10,5)
source("F:/PS part2/lab5/temaC.r")
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
source("F:/PS part2/lab5/temaC.r")
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
source("F:/PS part2/lab5/temaC.r")
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
generate_sorted_permutation(10,5)
source("F:/PS part2/lab5/temaC.r")
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
generate_sorted_permutation(10,5)
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
source("F:/PS part2/lab5/temaC.r")
help(setdiff)
