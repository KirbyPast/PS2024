demo()
help.start()
setwd("F:/PS part2")
plot(x,y,main="grafic",sub="subtilul",xlab="axa x",ylab="axa y")
>plot(x,y,main="grafic",sub="subtilul",xlab="axa x",ylab="axa y")
y<-log2(x)
x=seq(0.001, 10, length = 200)
y=log2(x)
plot(x,y,main="grafic",sub="subtilul",xlab="axa x",ylab="axa y")
x=seq(0.001, 10, length = 200)
y=log2(x)
plot(x,y,main="grafic",sub="subtilul",xlab="axa x",ylab="axa y")
x=seq(0.001, 100, length = 2000)
y=log2(x)
plot(x,y,main="grafic",sub="subtilul",xlab="axa x",ylab="axa y")
n=20
x=seq(0,n,1)
y=(dbinom(x,n,0.4))
barplot(y,space=0)
n=10
x=seq(0,n,1)
y=(dbinom(x,n,0.4))
barplot(y,space=0)
b=scan(n=7)
for(i in b){
vector_date[1]=vector_date[1]+i;
}
vector_date[1]=vector_date[1]/n;
b=scan(n=7)
b=scan(n=7)
b=scan(n=7)
b=scan(n=7)
b=scan(n=7)
b=scan(n=7)
vector_date = function(b) {
vector_date[1]=0;
for(i in b){
vector_date[1]=vector_date[1]+i;
}
vector_date[1]=vector_date[1]/n;
}
vector_date = function(b) {
vector_date[1]=0;
for(i in b){
vector_date[1]=vector_date[1]+i;
}
vector_date[1]=vector_date[1]/n;
}
View(vector_date)
vector_date = function(x,b) {
x[1]=0;
for(i in b){
x[1]=x[1]+i;
}
x[1]=x[1]/n;
}
b=scan(n=7)
vector_date = function(x,b) {
x[1]=0;
for(i in b){
x[1]=x[1]+i;
}
x[1]=x[1]/n;
}
View(vector_date)
View(vector_date)
vector_date=function(vector_date,b)
View(vector_date)
vector_date=function(vector_date,b)
View(vector_date)
View(vector_date)
calcul_statistici = function(b) {
rezultat[1]=max(b);
rezultat[2]=min(b);
rezultat[3]=sum(b);
rezultat[4]=mean(b);
rezultat[5]=rezultat[2]/rezultat[1];
rezultat[6]=sum(b>=40)
rezultat[7]=mean(b<40)*100
return rezultat
calcul_statistici = function(b) {
rezultat[1]=max(b);
rezultat[2]=min(b);
rezultat[3]=sum(b);
rezultat[4]=mean(b);
rezultat[5]=rezultat[2]/rezultat[1];
rezultat[6]=sum(b>=40)
rezultat[7]=mean(b<40)*100
return(rezultat)
}
View(calcul_statistici)
View(calcul_statistici)
View(calcul_statistici)
View(calcul_statistici)
View(vector_date)
rezultate=calcul_statistici(b)
rezultate=calcul_statistici(b)
calcul_statistici = function(b) {
rezultat[1]=max(b);
rezultat[2]=min(b);
rezultat[3]=sum(b);
rezultat[4]=mean(b);
rezultat[5]=rezultat[2]/rezultat[1];
rezultat[6]=sum(b>=40)
rezultat[7]=mean(b<40)*100
return(rezultat)
}
rezultate=calcul_statistici(b)
calcul_statistici = function(b) {
maxim=max(b)
minim=min(b)
suma=sum(b)
medie=mean(b)
raport=minim/maxim
sum_mare=sum(b>=40)
medie_mica=mean(b<40)*100
rezultat=c(maxim,minim,suma,medie,raport,sum_mare,medie_mica)
return(rezultat)
}
rezultate=calcul_statistici(b)
procent_fiecare = function(x){
c=0
suma=sum(x)
for(i in x){
vec[c]=i/suma
c=c+1
}
return vec
b=scan(n=7)
rezultat=procent_fiecare(b)
procent_fiecare = function(x){
c=0
suma=sum(x)
for(i in x){
vec[c]=i/suma
c=c+1
}
return vec
procent_fiecare = function(x){
c=0
suma=sum(x)
for(i in x){
vec[c]=i/suma
c=c+1
}
return(vec)
}
rezultat=procent_fiecare(b)
procent_fiecare = function(x){
suma=sum(x)
for(i in x){
vec=c(i/suma)
}
return(vec)
}
rezultat=procent_fiecare(b)
procent_fiecare = function(x){
suma=sum(x)
c=0
vector(vec)
for(i in x){
vec[c]=i/suma
c=c+1
}
return(vec)
}
rezultat=procent_fiecare(b)
procent_fiecare = function(x){
suma=sum(x)
c=0
vec=vector()
for(i in x){
vec[c]=i/suma
c=c+1
}
return(vec)
}
rezultat=procent_fiecare(b)
sum(help)
sum
help(sum)
b=scan(n=7)
b=scan(n=7)
# B)
punct_b=function(x){
maxim=max(x)
minim=min(x)
c=0
vec=vector()
for(i in x){
vec[c]=(i-minim)/maxim
c=c+1
}
return(vec)
}
rezultatb=punct_b(b)
punct_c=function(x,k){
c=1
suma_sus=0;
suma_jos=0;
for(i in x){
if(i<=k){
suma_sus=suma_sus+i;
}
else{
suma_jos=suma_jos+i;
}
}
medie=suma_sus/suma_jos;
return(medie);
}
rezultatc=punct_c(b,k);
# D)
# D)
k=3
rezultatc=punct_c(b,k);
punct_c=function(x,k){
c=1
suma_sus=0;
suma_jos=0;
for(i in x){
if(i<=k){
suma_sus=suma_sus+i;
}
else{
suma_jos=suma_jos+i;
}
}
medie=suma_sus+10/suma_jos;
return(medie);
}
rezultatc=punct_c(b,k);
punct_c=function(x,k){
c=1
suma_sus=0;
suma_jos=0;
for(i in x){
if(i<=k){
suma_sus=suma_sus+i;
}
else{
suma_jos=suma_jos+i;
}
}
medie=suma_sus/suma_jos;
return(medie);
}
rezultatc=punct_c(b,k);
punct_c=function(x,k){
c=1
suma_sus=0;
suma_jos=0;
for(i in x){
if(c<=k){
suma_sus=suma_sus+i;
}
else{
suma_jos=suma_jos+i;
}
c++
}
punct_c=function(x,k){
c=1
suma_sus=0;
suma_jos=0;
for(i in x){
if(c<=k){
suma_sus=suma_sus+i;
}
else{
suma_jos=suma_jos+i;
}
c=c+1
}
medie=suma_sus/suma_jos;
return(medie);
}
rezultatc=punct_c(b,k);
reprezinta_geometric <- function(p, n) {
# Calculăm primele n probabilități ale repartiției geometrice
probabilitati <- dgeom(1:n, prob = p)
# Afișăm graficul
barplot(probabilitati, names.arg = 1:n, xlab = "k", ylab = "Probabilitate", main = "Repartiția Geometrică")
}
# Exemplu de utilizare:
p <- 0.3 # probabilitatea de succes pentru distribuția geometrică
n <- 10  # numărul de probabilități pe care dorim să le reprezentăm
# Apelăm funcția pentru a afișa și reprezenta grafic primele n probabilități ale repartiției geometrice
reprezinta_geometric(p, n)
reprezinta_geometric <- function(p, n) {
# Calculăm primele n probabilități ale repartiției geometrice
probabilitati <- dgeom(1:n, prob = p)
# Afișăm graficul
barplot(probabilitati, names.arg = 1:n, xlab = "k", ylab = "Probabilitate", main = "Repartiția Geometrică")
}
# Exemplu de utilizare:
p <- 0.3 # probabilitatea de succes pentru distribuția geometrică
n <- 10  # numărul de probabilități pe care dorim să le reprezentăm
reprezinta_geometric = function(p, n) {
probabilitati = dgeom(1:n, prob = p)
barplot(probabilitati, names.arg = 1:n, xlab = "k", ylab = "Probabilitate", main = "Repartiția Geometrică")
}
p = 0.3
n = 10
reprezinta_poisson=function(lambda,n){
probabilitati=dpois(1:n,lambda)
barplot(probabilitati,names.arg=1:n,xlab="k",ylab="Probabilitate",main="Repartitie Poisson")
}
lambda=2;
n=10
reprezinta_poisson(lambda,n)
n=100
reprezinta_poisson(lambda,n)
n = 100
reprezinta_geometric(p, n)
n=100
reprezinta_poisson(lambda,n)
lambda=4;
n=100
reprezinta_poisson(lambda,n)
lambda=10;
n=100
reprezinta_poisson(lambda,n)
